from typing import Dict, List

def get_scrolling_routines() -> Dict[str, List[str]]:
    """Returns the routines for scrolling."""
    return {
        'SCROLL': [
            'SCROLL:',
            '  JMP CCOO',
        ],
        'CCOO': [
            'CCOO: ; START',
            '  JSR CHKGET',
            '  TXA',
            '  LSR A',
            '  PHP',
            '  JSR CHKGET',
            '  CPX #25',
            '  BCC CC0D',
            '  LDX #24',
            'CC0D: STX 07F6',
            '  JSR CHKGET',
            '  CPX #25',
            '  BCC CC19',
            '  LDX #24',
            'CC19: STX 07F7',
            '  TXA',
            '  LDX 07F6',
            '  LDY 07F7',
            '  SEC',
            '  SBC 07F6',
            '  BCS CC33',
            '  EOR #$FF',
            '  LDX 07F7',
            '  LDY 07F6',
            'CC33: STA NUMBER',
            '  PLP',
            '  PHP',
            '  BCC CC3B',
            '  INY',
            'CC3A: TYA',
            '  TAX',
            'CC3B: LDA CCBB,X',
            '  STA ADDRESS+1',
            '  LDA CCE5,X',
            '  STA ADDRESS',
            '  PLP',
            '  PHP',
            '  BCC MOVE',
            '  SBC #1',
            '  STA ADDRESS',
            '  BCS MOVE',
            '  DEC ADDRESS+1',
            'MOVE:',
            '  LDA ADDRESS+1',
            '  AND #3',
            '  ORA #4',
            '  PLP',
            '  PHP',
            '  JSR CC86',
            '  PLP',
            '  PHP',
            '  LDA ADDRESS',
            '  BCC CC6D',
            '  ADC #39',
            '  STA ADDRESS',
            '  BCC CC6B',
            '  INC ADDRESS+1',
            '  BCS CC75',
            'CC6D: SBC #39',
            '  STA ADDRESS',
            '  BCS CC75',
            '  DEC ADDRESS+1',
            'CC75: LDA ADDRESS+1',
            '  AND #3',
            '  ORA #$D8',
            '  PLP',
            '  PHP',
            '  JSR CC86',
            '  DEC NUMBER',
            '  BPL MOVE',
            '  PLP',
            '  RTS',
            'CC86: ; MOVE1',
            '  STA ADDRESS+1',
            '  BCC CC8D',
            '  JMP CCAB',
            'CC8D: ; LEFT',
            '  LDY #0',
            '  LDA (ADDRESS),Y',
            '  TAX',
            '  LDY #39',
            'CC94: LDA (ADDRESS),Y',
            '  PHA',
            '  TXA',
            '  STA (ADDRESS),Y',
            '  PLA',
            '  TAX',
            '  DEY',
            '  BPL CC94',
            '  CLC',
            '  LDA ADDRESS',
            '  ADC #40',
            '  STA ADDRESS',
            '  BCC CCAA',
            '  INC ADDRESS+1',
            'CCAA: RTS',
            'CCAB: ; RIGHT',
            '  SEC',
            '  LDA ADDRESS',
            '  SBC #40',
            '  STA ADDRESS',
            '  BCS CCB6',
            '  DEC ADDRESS+1',
            'CCB6: LDY #40',
            '  LDA (ADDRESS),Y',
            '  TAX',
            '  LDY #1',
            'CCBD: LDA (ADDRESS),Y',
            '  PHA',
            '  TXA',
            '  STA (ADDRESS),Y',
            '  PLA',
            '  TAX',
            '  INY',
            '  CPY #41',
            '  BNE CCBD',
            '  RTS',
        ],
        'CCBB': [
            'CCBB: ; MULH table',
            '  .BYTE 4,4,4,4,4,4,4,5,5,5,5,5,5',
            '  .BYTE 6,6,6,6,6,6,6,7,7,7,7,7,7',
        ],
        'CCE5': [
            'CCE5: ; MULL table',
            '  .BYTE $00,$28,$50,$78,$A0,$C8,$F0,$18,$40,$68,$90,$B8,$E0',
            '  .BYTE $08,$30,$58,$80,$A8,$D0,$F8,$20,$48,$70,$98,$C0,$E8',
        ]
    }
